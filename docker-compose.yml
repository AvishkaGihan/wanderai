version: "3.8"

services:
  # PostgreSQL Database
  db:
    image: postgres:16-alpine
    container_name: wanderai-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: wanderai_dev
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - wanderai-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: wanderai-redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - wanderai-network

  # FastAPI Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: wanderai-backend
    environment:
      DATABASE_URL: postgresql://postgres:postgres@db:5432/wanderai_dev
      REDIS_URL: redis://redis:6379
      ENVIRONMENT: development
      DEBUG: "true"
      FIREBASE_PROJECT_ID: ${FIREBASE_PROJECT_ID}
      FIREBASE_WEB_API_KEY: ${FIREBASE_WEB_API_KEY}
      GEMINI_API_KEY: ${GEMINI_API_KEY}
      PEXELS_API_KEY: ${PEXELS_API_KEY}
      SECRET_KEY: ${SECRET_KEY:-dev-secret-key-change-in-production}
      CORS_ORIGINS: "http://localhost:3000,http://localhost:8080,http://localhost:8000,http://10.0.2.2:*,http://127.0.0.1:*"
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    networks:
      - wanderai-network

volumes:
  postgres_data:

networks:
  wanderai-network:
    driver: bridge
